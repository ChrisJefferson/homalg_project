#############################################################################
##
##  Cone.gd         ConvexForHomalg package         Sebastian Gutsche
##
##  Copyright 2011 Lehrstuhl B f√ºr Mathematik, RWTH Aachen
##
##  Cones for ConvexForHomalg.
##
#############################################################################

DeclareCategory( "IsHomalgCone",
                 IsHomalgFan );

################################
##
## Basic Properties
##
################################

DeclareProperty( "IsRegularCone",
                 IsHomalgCone );

################################
##
## Attributes
##
################################

##  <#GAPDoc Label="DualCone">
##  <ManSection>
##    <Attr Arg="cone" Name="DualCone"/>
##    <Returns>a cone</Returns>
##    <Description>
##      Returns the dual cone of the cone <A>cone</A>.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "DualCone",
                  IsHomalgCone );

##  <#GAPDoc Label="HilbertBasis">
##  <ManSection>
##    <Attr Arg="cone" Name="DualCone"/>
##    <Returns>a list</Returns>
##    <Description>
##      Returns a Hilbert Basis of the cone <A>cone</A>.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "HilbertBasis",
                  IsHomalgCone );

##  <#GAPDoc Label="RaysInFacets">
##  <ManSection>
##    <Attr Arg="cone" Name="RaysInFacets"/>
##    <Returns>a list</Returns>
##    <Description>
##      Returns an incidence matrix for the rays in the facets of the cone <A>cone</A>. The ith entry
##      of the result corresponds to the ith facet, the jth entry of this is 1 iff the jth ray is
##      in th eith facet, 0 otherwise.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "RaysInFacets",
                  IsHomalgCone );

##  <#GAPDoc Label="Facets">
##  <ManSection>
##    <Attr Arg="cone" Name="Facets"/>
##    <Returns>a list</Returns>
##    <Description>
##      Returns a list of the facets of the cone <A>cone</A> as homalg cones.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "Facets",
                  IsHomalgCone );

##  <#GAPDoc Label="GridGeneratedByCone">
##  <ManSection>
##    <Attr Arg="cone" Name="GridGeneratedByCone"/>
##    <Returns>a homalg module</Returns>
##    <Description>
##      Returns the grid generated by the lattice points of the cone <A>cone</A> as a homalg module.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "GridGeneratedByCone",
                  IsHomalgCone );

##  <#GAPDoc Label="FactorGrid">
##  <ManSection>
##    <Attr Arg="cone" Name="FactorGrid"/>
##    <Returns>a homalg module</Returns>
##    <Description>
##      Returns the factor of the containing grid of the cone <A>cone</A> and the grid generated by <A>cone</A>.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "FactorGrid",
                  IsHomalgCone );

##  <#GAPDoc Label="GridGeneratedByOrthogonalCone">
##  <ManSection>
##    <Attr Arg="cone" Name="GridGeneratedByOrthogonalCone"/>
##    <Returns>a homalg module</Returns>
##    <Description>
##      Returns the grid generated by the lattice points of the orthogonal cone of the cone <A>cone</A>.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "GridGeneratedByOrthogonalCone",
                  IsHomalgCone );

##  <#GAPDoc Label="DefiningInequalities">
##  <ManSection>
##    <Attr Arg="cone" Name="DefiningInequalities"/>
##    <Returns>a list</Returns>
##    <Description>
##      Returns a list of the defining inequalities of the cone <A>cone</A>.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "DefiningInequalities",
                  IsHomalgCone );

##  <#GAPDoc Label="IsContainedInFan">
##  <ManSection>
##    <Attr Arg="cone" Name="IsContainedInFan"/>
##    <Returns>a fan</Returns>
##    <Description>
##      If the cone <A>cone</A> is constructed as part of a fan, this method returns the fan.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "IsContainedInFan",
                  IsHomalgCone );

##  <#GAPDoc Label="FactorGridMorphism">
##  <ManSection>
##    <Attr Arg="cone" Name="FactorGridMorphism"/>
##    <Returns>a morphism</Returns>
##    <Description>
##      Returns the morphism to the factor grid of the cone <A>cone</A>.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareAttribute( "FactorGridMorphism",
                  IsHomalgCone );

################################
##
## Methods
##
################################

##  <#GAPDoc Label="IntersectionOfCones">
##  <ManSection>
##    <Oper Arg="cone1,cone2" Name="IntersectionOfCones"/>
##    <Returns>a cone</Returns>
##    <Description>
##      If the cones <A>cone1</A> and <A>cone2</A> share a face, the method returns their intersection,
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareOperation( "IntersectionOfCones",
                  [ IsHomalgCone, IsHomalgCone ] );

##  <#GAPDoc Label="IntersectionOfCones">
##  <ManSection>
##    <Oper Arg="cone1,cone2" Name="IntersectionOfCones"/>
##    <Returns><C>true</C> or <C>false</C></Returns>
##    <Description>
##      Returns <C>true</C> if the cone <A>cone1</A> contains the cone <A>cone2</A>, <C>false</C> otherwise.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareOperation( "Contains",
                  [ IsHomalgCone, IsHomalgCone ] );

##  <#GAPDoc Label="StarFan">
##  <ManSection>
##    <Oper Arg="cone" Name="StarFan"/>
##    <Returns>a fan</Returns>
##    <Description>
##      Returns the star fan of the cone <A>cone</A>, as described in cox, 3.2.7
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareOperation( "StarFan",
                  [ IsHomalgCone ] );

##  <#GAPDoc Label="StarFan">
##  <ManSection>
##    <Oper Arg="cone,fan" Name="StarFan"/>
##    <Returns>a fan</Returns>
##    <Description>
##      Returns the star fan of the fan <A>fan</A> along the cone <A>cone</A>, as described in cox, 3.2.7
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareOperation( "StarFan",
                  [ IsHomalgCone, IsHomalgFan ] );

##  <#GAPDoc Label="StarSubdivisionOfIthMaximalCone">
##  <ManSection>
##    <Oper Arg="fan,numb" Name="StarSubdivisionOfIthMaximalCone"/>
##    <Returns>a fan</Returns>
##    <Description>
##      Returns the star subdivison of the fan <A>fan</A> on the <A>numb</A>th maximal cone as in cox, 3.3.13.
##    </Description>
##  </ManSection>
##  <#/GAPDoc>
##
DeclareOperation( "StarSubdivisionOfIthMaximalCone",
                  [ IsHomalgFan, IsInt ] );

################################
##
## Constructors
##
################################

DeclareOperation( "HomalgCone",
                  [ IsHomalgCone ] );

DeclareOperation( "HomalgCone",
                  [ IsList ] );

DeclareOperation( "HomalgCone",
                  [ IsInt ] );
